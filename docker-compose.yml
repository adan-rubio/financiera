version: '3.8'

services:
  db:
    image: postgres:13
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 5s
      retries: 5
    labels:
      - "traefik.enable=false"
    networks:
      - network_public

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT}:80"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - APP_PORT=${APP_PORT}
      - APP_URL=${APP_URL}
      - BACKEND_PORT=${BACKEND_PORT}
      - REACT_APP_API_URL=/api
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      - db
    labels:
      - "traefik.http.routers.app.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=80"
    networks:
      - network_public

volumes:
  postgres_data:

networks:
  network_public:
    external: true
    name: network_public